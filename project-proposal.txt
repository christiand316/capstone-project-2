1. What tech stack will you use for your final project? We recommend that you use
React and Node for this project, however if you are extremely interested in
becoming a Python developer you are welcome to use Python/Flask for this
project.

I will use NextJS and Prisma. I will also implement some of the Tanstack suite and add things like optimistic updating

2. Is the front-end UI or the back-end going to be the focus of your project? Or are
you going to make an evenly focused full-stack application?

This project will be pretty evenly full-stack

3. Will this be a website? A mobile app? Something else?

This project will work more as a web application, mobile accessibility will not be a concern at first. 

4. What goal will your project be designed to achieve?

My projects goal will be to be a fully(or at least mostly) functioning dealership management software(DMS) on par with what is currently in the industry.

5. What kind of users will visit your app? In other words, what is the demographic of
your users?

Car dealership staff would be the hypothetical users, however any userbase is unlikely due to the reality of car dealerships being tied up in contracts.

6. What data do you plan on using? How are you planning on collecting your data?
You may have not picked your actual API yet, which is fine, just outline what kind
of data you would like it to contain. You are welcome to create your own API and
populate it with data. If you are using a Python/Flask stack are required to create
your own API.

I plan on having mostly user generated data. As a stretch goal I would want demo profiles to autopopulate with data using faker

7. In brief, outline your approach to creating your project (knowing that you may not
know everything in advance and that these details might change later). Answer
questions like the ones below, but feel free to add more information:
a. What does your database schema look like?
b. What kinds of issues might you run into with your API? This is especially
important if you are creating your own API, web scraping produces
notoriously messy data.
Multiple users can edit the same data. If user A updates a client and 30 minutes later user B who has been on the app for >30 minutes and has out of date data updates the same client. 

c. Is there any sensitive information you need to secure?
No, only for more stretch goals and functionality would there be sensitive info beyond just the general login info. 

d. What functionality will your app include?
It will include client management, vehicle management, and dealership statistics. 

e. What will the user flow look like?
It will mimic what would be seen in a real world car dealership.

f. What features make your site more than a CRUD app? What are your
stretch goals?
The real world application is the first thing that makes this more than just a CRUD app to me. My stretch goals are things to bring the app beyond the abilities of DMSs currently found in the industry. 
